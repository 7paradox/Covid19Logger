{"version":3,"sources":["Pages/FormOption.js","Pages/ChartHook.js","Pages/User.js","Components/Accordiondata.js","Pages/About.js","Components/Regionaltable.js","Components/Carddata.js","Pages/GlobalStatus.js","App.js","serviceWorker.js","index.js"],"names":["FormOption","obj","action","ini","name","value","useState","options","setOption","Form","Row","Col","Label","display_name","Group","controlId","style","margin","Control","type","custom","onChange","event","target","ChartHook","param","his","RunnyNose","runnyNose","DryCough","dryCough","Fever","fever","BreathingDiffculty","breathingDiffculty","Tiredness","tiredness","SoreThroat","soreThroat","Bodyache","bodyAche","date","chartConfig","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","scales","yAxes","ticks","beginAtZero","min","max","chartContainer","useRef","setChartInstance","useEffect","current","newChartInstance","Chartjs","ref","User","newDate","Date","context","useContext","UserContext","console","log","history","setHistory","flag","setFlag","symptoms","setSymptoms","handleSymptom","details","JSON","parse","localStorage","getItem","axios","post","then","res","status","className","md","Card","border","bg","borderRadius","alignItems","padding","width","src","picture","Body","Title","email","onSubmit","preventDefault","stringify","sym","user","x","map","Button","variant","xs","lg","y","index","Spinner","animation","Accordiondata","head","body","Accordion","Toggle","as","Header","eventKey","Collapse","About","bodycolor","href","color","Text","defaultActiveKey","QA","key","Regionaltable","regional","Table","striped","bordered","hover","responsive","size","state","loc","confirmedCasesIndian","confirmedCasesForeign","discharged","deaths","Carddata","headcolor","background","GlobalStatus","summary_initial","info","regional_initial","summary","setSummary","setRegional","get","total","React","createContext","App","initialDetails","isLoggedin","userID","loginDetails","setLoginDetails","setItem","Navbar","expand","to","onClick","removeItem","window","FB","logout","display","appId","autoLoad","fields","callback","response","url","cssClass","icon","Provider","Container","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.798e391f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Row, Col } from 'react-bootstrap';\r\n\r\nfunction FormOption({ obj, action }) {\r\n    const ini = { [obj.name]: obj.value }\r\n\r\n    const [options, setOption] = useState(ini)\r\n    const handleChange = (event) => {\r\n        setOption({ [event.target.name]: event.target.value });\r\n        action(event.target.name, event.target.value);\r\n    }\r\n    return (\r\n        <div>\r\n            <Form>\r\n\r\n                <Row>\r\n                    <Col><Form.Label>{obj.display_name}</Form.Label></Col>\r\n                    <Col><Form.Group controlId=\"formBasicRangeCustom\" style={{ margin: \"100\" }}>\r\n\r\n                        <Form.Control type=\"range\" custom name={obj.name} value={options[obj.name]} onChange={handleChange} />\r\n\r\n                    </Form.Group></Col>\r\n                    <Col>{options[obj.name]}</Col>\r\n                </Row>\r\n                \r\n\r\n\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormOption\r\n","import React, { useEffect, useRef,useState } from 'react';\r\nimport Chartjs from 'chart.js';\r\n\r\n\r\n\r\n\r\nconst ChartHook = ({param}) => {\r\n  const his={\r\n    RunnyNose:param.runnyNose,\r\n    DryCough:param.dryCough,\r\n    Fever:param.fever,\r\n    BreathingDiffculty:param.breathingDiffculty,\r\n    Tiredness:param.tiredness,\r\n    SoreThroat:param.soreThroat,\r\n    Bodyache:param.bodyAche,\r\n    date:param.date\r\n  }\r\n\r\n  const chartConfig = {\r\n    type: 'bar',\r\n    data: {\r\n      labels: [\"Runny Nose\", \"Dry Cough\", \"Fever\", \"Breathing Diffculty\", \"Tiredness\", \"Sorethroat\",\"Bodyache\"],\r\n      datasets: [\r\n        {\r\n          label: his.date,\r\n          data: [his.RunnyNose, his.DryCough, his.Fever, his.BreathingDiffculty, his.Tiredness, his.SoreThroat,his.Bodyache],\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.2)\",\r\n            \"rgba(54, 162, 235, 0.2)\",\r\n            \"rgba(255, 206, 86, 0.2)\",\r\n            \"rgba(75, 192, 192, 0.2)\",\r\n            \"rgba(153, 102, 255, 0.2)\",\r\n            \"rgba(255, 55, 64, 0.2)\",\r\n            \"rgba(255,155,89,0.2)\"\r\n          ],\r\n          borderColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n            \"rgba(255, 159, 64, 1)\",\r\n            \"rgba(255,155,89,1)\"\r\n          ],\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    },\r\n    options: {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n              min: 0,\r\n              max: 100  \r\n            }\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  \r\n  const chartContainer = useRef(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer]);\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={chartContainer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartHook;","import React, { useState, useContext, useEffect } from 'react'\r\nimport { UserContext } from '../App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Row, Col, Card, Button, Spinner,Img} from 'react-bootstrap';\r\nimport FormOption from './FormOption';\r\nimport axios from 'axios';\r\nimport ChartHook from './ChartHook'\r\n\r\n\r\nfunction User() {\r\n    let newDate = new Date()\r\n    const context = useContext(UserContext)\r\n\r\n    console.log(\"first\")\r\n    console.log(context)\r\n    \r\n\r\n    const [history, setHistory] = useState([])\r\n\r\n\r\n\r\n    const ini = [\r\n        { value: 0, display_name: \"Dry Cough\", name: \"Dry_Cough\" },\r\n        { value: 0, display_name: \"Fever\", name: \"Fever\" },\r\n        { value: 0, display_name: \"Runny Nose\", name: \"Runny_Nose\" },\r\n        { value: 0, display_name: \"Breathing Diffculty\", name: \"Breathing_Diffculty\" },\r\n        { value: 0, display_name: \"Tiredness\", name: \"Tiredness\" },\r\n        { value: 0, display_name: \"Sore Throat\", name: \"Sore_throat\" },\r\n        { value: 0, display_name: \"Body Ache\", name: \"Body_ache\" }\r\n\r\n    ]\r\n    const [flag,setFlag]=useState(true);\r\n\r\n    const [symptoms, setSymptoms] = useState({});\r\n    const handleSymptom = (name, value) => {\r\n        setSymptoms({ ...symptoms, [name]: value })\r\n    }\r\n    const details = JSON.parse(localStorage.getItem(\"loginDetails\"))\r\n    const hello=[1,2,4,5]\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        \r\n        const json = JSON.stringify(symptoms)\r\n        const details = localStorage.getItem(\"loginDetails\")\r\n        console.log(details)\r\n        let current = newDate\r\n        // newDate.getMonth()+1+\"-\"+newDate.getDate()+\"-\"+newDate.getFullYear()\r\n        console.log(current)\r\n        //axios.post('https://covid19logger.azurewebsites.net/usersymptoms', { sym: symptoms, user: JSON.parse(details), date: current })\r\n        axios.post('https://covid19logger.azurewebsites.net/usersymptoms',{ sym: symptoms, user: JSON.parse(details), date: current })\r\n            .then(x => {console.log(x);setHistory([]); setFlag(!flag)})\r\n        \r\n    }\r\n    useEffect(()=>{\r\n                setFlag(!flag)\r\n     },[context])\r\n\r\n    useEffect(() => {\r\n        \r\n        console.log(\"history\"+history)\r\n        console.log(\"info \" )\r\n        console.log(context)\r\n             // https://covid19logger.azurewebsites.net\r\n        //axios.post('https://covid19logger.azurewebsites.net/getsymptoms', context)\r\n     \r\n            axios.post('https://covid19logger.azurewebsites.net/getsymptoms',details)\r\n                .then(res =>{\r\n                console.log(\"axios \");\r\n                console.log(res);\r\n                if(res.status==\"204\" || res.status==\"500\"){\r\n                    console.log(\"error\"+res.status)\r\n                }\r\n                else{\r\n                   \r\n                     setHistory(res.data)\r\n                    console.log(res.data)\r\n                    console.log(\"flag\"+flag)\r\n                }\r\n                \r\n            })\r\n        \r\n\r\n\r\n       \r\n           \r\n\r\n    }, [!flag])\r\n\r\n    return (\r\n        <div >\r\n            {context?\r\n                <>\r\n                    <br />\r\n                    <Row className=\"justify-content-md-center\" >\r\n                        <Col md=\"auto\">\r\n                        <Card border=\"primary\" bg=\"light\" style={{ borderRadius: 25, borderWidth: 2,alignItems: \"center\",padding:5 }}>\r\n                            <img  width=\"65\" src={context.picture} />\r\n                            <Card.Body>\r\n                                <Card.Title>User Profile</Card.Title>\r\n                                \r\n                                    Name : {context.name}<br />\r\n                                    Email : {context.email}\r\n                                \r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n\r\n                    <Card bg=\"light\" border=\"info\" style={{ borderRadius: 25, borderWidth: 2 }}>\r\n\r\n                        <Card.Body >\r\n                            <Card.Title>Symptoms</Card.Title>\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    {ini.map((x) => <FormOption obj={x} action={handleSymptom} />)}\r\n                                    <Button variant=\"info\" type=\"Submit\" value=\"submit\" >Submit</Button>\r\n                                </Form>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <br />\r\n\r\n                   \r\n                    <Card bg=\"light\" border=\"warning\" style={{ borderRadius: 25, borderWidth: 2 }}>\r\n                \r\n                        <Card.Body>\r\n                            <Card.Title>History</Card.Title>\r\n                            \r\n                                <Row xs lg=\"2\">\r\n                                    {history.date??history.map((y,index) =>\r\n                                        <Col >\r\n                                            <Card>\r\n                                                <Card.Body >\r\n                                                    <ChartHook param={y} />\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    )}\r\n                                </Row>\r\n                            \r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                    \r\n                                    \r\n\r\n\r\n\r\n                </>\r\n                :\r\n                <Spinner animation=\"grow\" />\r\n\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\nimport { Accordion, Card } from 'react-bootstrap';\r\n\r\nfunction Accordiondata({ head, body, index }) {\r\n    return (\r\n        <>\r\n            <Accordion.Toggle as={Card.Header} style={{ width: \"100%\" }} eventKey={index}>\r\n                {head}\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey={index}>\r\n                <Card.Body>\r\n                    {body}\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Accordiondata\r\n","import React,{useContext,useEffect} from 'react'\r\nimport { Accordion,Card,Row,Col } from 'react-bootstrap';\r\nimport Accordiondata from '../Components/Accordiondata';\r\nimport { UserContext } from '../App'\r\nimport axios from 'axios';\r\n\r\nfunction About() {\r\n  \r\n  const context = useContext(UserContext)\r\n  console.log(context)\r\n\r\n\r\n\r\n\r\n\r\n\r\n  var QAS = [\r\n    {\r\n      head: \"What is Novel Coronavirus?\", body: `A novel coronavirus is a new coronavirus that has not been previously identified. The virus causing coronavirus disease 2019 (COVID-19), is not the same as the coronaviruses that commonly circulate among humans and cause mild illness, like the common cold.\r\n    A diagnosis with coronavirus 229E, NL63, OC43, or HKU1 is not the same as a COVID-19 diagnosis. Patients with COVID-19 will be evaluated and cared for differently than patients with common coronavirus diagnosis.`},\r\n    { head: \"Can humans become infected with a novel coronavirus of animal source?\", body: `Detailed investigations found that SARS-CoV was transmitted from civet cats to humans in China in 2002 and MERS-CoV from dromedary camels to humans in Saudi Arabia in 2012. Several known coronaviruses are circulating in animals that have not yet infected humans. As surveillance improves around the world, more coronaviruses are likely to be identified.` },\r\n    { head: \"What are the symptoms of someone infected with a coronavirus?\", body: `It depends on the virus, but common signs include respiratory symptoms, fever, cough, shortness of breath, and breathing difficulties. In more severe cases, infection can cause pneumonia, severe acute respiratory syndrome, kidney failure and even death.` },\r\n    { head: \"Is there a vaccine for a novel coronavirus?\", body: `When a disease is new, there is no vaccine until one is developed. It can take a number of years for a new vaccine to be developed.` },\r\n    { head: \"What can I do to protect myself?\", body: `Detailed investigations found that SARS-CoV was transmitted from civet cats to humans in China in 2002 and MERS-CoV from dromedary camels to humans in Saudi Arabia in 2012. Several known coronaviruses are circulating in animals that have not yet infected humans. As surveillance improves around the world, more coronaviruses are likely to be identified.` },\r\n    { head: \"How long is the incubation period?\" ,body:`The “incubation period” means the time between catching the virus and beginning to have symptoms of the disease. Most estimates of the incubation period for COVID-19 range from 1-14 days, most commonly around five days. These estimates will be updated as more data become available.`},\r\n    \r\n  ]\r\n\r\n  return (\r\n    <>\r\n    <br/>\r\n    <br/>\r\n    <br/>\r\n    <br/>\r\n    \r\n<Card  border=\"info\" bg=\"light\" style={{ borderRadius: 25, borderWidth: 2}}>\r\n<Card.Title>Sources and Important Links</Card.Title>    \r\n<Row className=\"justify-content-md-center\">\r\n\r\n<Col md=\"auto\">\r\n  <Card  border=\"warning\" style={{ borderRadius: 25, borderWidth: 2}}>\r\n\r\n    <Card.Body bodycolor={\"#2F4F4F\"}>\r\n      <Card.Title><a href=\"https://www.who.int/\" target=\"_blank\" style={{ color: '#800020' }}>WHO Website</a></Card.Title>\r\n      <Card.Text>\r\n      </Card.Text>\r\n      \r\n    </Card.Body>\r\n    </Card>\r\n    </Col>\r\n    <Col md=\"auto\">\r\n  <Card border=\"primary\" style={{ borderRadius: 25, borderWidth: 2}}>\r\n     <Card.Body>\r\n      <Card.Title><a href=\"https://www.mygov.in/covid-19/?cbps=1\" target=\"_blank\" style={{ color: '#800020' }} >Indian Government</a></Card.Title>\r\n      <Card.Text>\r\n      \r\n      \r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  </Col>\r\n  <Col md=\"auto\">\r\n  <Card border=\"success\" style={{ borderRadius: 25, borderWidth: 2}}>\r\n    <Card.Body>\r\n      <Card.Title><a href=\"https://github.com/amodm/api-covid19-in\" target=\"_blank\" style={{ color: '#800020' }}>GitHub Repo</a></Card.Title>\r\n      <Card.Text>\r\n      \r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  </Col>\r\n  </Row>\r\n  </Card>\r\n\r\n<br/>\r\n<br/>\r\n<br/>\r\n\r\n<Card border=\"info\" bg=\"light\" style={{ borderRadius: 25, borderWidth: 2}}>\r\n  <Card.Body >\r\n  <Card.Title>FAQ</Card.Title>\r\n    <Card.Text>\r\n    <Accordion defaultActiveKey=\"0\">\r\n        {QAS.map((QA, index) => <Card style={{ width: '100%' }} border=\"secondary\" key={index}><Accordiondata head={QA.head} body={QA.body} index={index} /></Card>)}\r\n      </Accordion>\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nfunction Regionaltable({ regional }) {\r\n    return (\r\n        <Table striped bordered hover responsive size=\"sm\">\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>State</th>\r\n                    <th style={{color:\"orange\"}}>Confirmed(Indian)</th>\r\n                    <th style={{color:\"#218abf\"}}>Confirmed(Foreign)</th>\r\n                    <th style={{color:\"green\"}}>Recovered</th>\r\n                    <th style={{color:\"red\"}}>Death</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n                {regional.map((state, index) =>\r\n                    <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{state.loc}</td>\r\n                        <td style={{color:\"orange\"}}>{state.confirmedCasesIndian}</td>\r\n                        <td style={{color:\"#218abf\"}}>{state.confirmedCasesForeign}</td>\r\n                        <td style={{color:\"green\"}}>{state.discharged}</td>\r\n                        <td style={{color:\"red\"}}>{state.deaths}</td>\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default Regionaltable\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction Carddata({name,value, headcolor, bodycolor}) {\r\n    return (\r\n        <Card className=\"text-center\" style={{color:\"white\"}}>\r\n            <Card.Header style={{ width: \"100%\",background:headcolor }}>{name}</Card.Header>\r\n            <Card.Body style={{ width: \"100%\",background:bodycolor }}>\r\n                {value}\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Carddata\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport info from '../info.json'\r\nimport Regionaltable from '../Components/Regionaltable';\r\nimport Card from '../Components/Carddata';\r\nimport { Row, Col,Spinner } from 'react-bootstrap';\r\n\r\n\r\n\r\nfunction GlobalStatus() {\r\n    const summary_initial = info.data;\r\n    const regional_initial = info.data.regional;\r\n\r\n    const [summary, setSummary] = useState(summary_initial);\r\n    const [regional, setRegional] = useState(regional_initial);\r\n\r\n    useEffect(() => {\r\n        axios.get('https://api.rootnet.in/covid19-in/stats/latest')\r\n            .then(res => {\r\n                setSummary(res.data.data.summary)\r\n                setRegional(res.data.data.regional)\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <br/>\r\n            <Row >\r\n                <Col><Card name=\"Total\" value={summary.total} headcolor={\"#052282\"} bodycolor={\"#193fbd\"} /></Col>\r\n                <Col><Card name=\"Confirmed(Indian)\" value={summary.confirmedCasesIndian} headcolor={\"#a85705\"} bodycolor={\"#e67b10\"} /></Col>\r\n                <Col><Card name=\"Confirmed(Foreign)\" value={summary.confirmedCasesForeign} headcolor={\"#02567a\"} bodycolor={\"#138dc2\"} /></Col>\r\n                <Col><Card name=\"Recovered\" value={summary.discharged} headcolor={\"#0e9104\"} bodycolor={\"#25ba1a\"} /></Col>\r\n                <Col><Card name=\"Deaths\" value={summary.deaths} headcolor={\"#9c030b\"} bodycolor={\"#cc101a\"} /></Col>\r\n            </Row>\r\n            <br/>\r\n           \r\n            <br/>\r\n            <Regionaltable regional={regional} />\r\n            \r\n            \r\n              \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GlobalStatus\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport FacebookLogin from 'react-facebook-login'\r\nimport './App.css';\r\nimport User from './Pages/User'\r\nimport About from './Pages/About'\r\nimport GlobalStatus from './Pages/GlobalStatus'\r\nimport { Router, Link } from \"@reach/router\"\r\nimport { Navbar, Container } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nexport const UserContext = React.createContext();\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n    const initialDetails =\r\n    {\r\n        isLoggedin: false,\r\n        userID: '',\r\n        name: '',\r\n        email: '',\r\n        picture: ''\r\n    }\r\n\r\n\r\n    const [loginDetails, setLoginDetails] = useState(JSON.parse(localStorage.getItem(\"loginDetails\")));\r\n\r\n    useEffect(() => {\r\n        console.log(\"useeff \")\r\n        if(loginDetails!==null && loginDetails.isLoggedin!==false)\r\n            localStorage.setItem(\"loginDetails\", JSON.stringify(loginDetails));\r\n    }, [loginDetails])\r\n\r\n\r\n\r\n    let responseFacebook = response => {\r\n        console.log(response)\r\n\r\n        if (response.status === \"unknown\" || response.status === \"not_authorized\") {\r\n            console.log(\"error \" + response.status)\r\n        } else {\r\n            setLoginDetails({\r\n                isLoggedin: true,\r\n                userID: response.userID,\r\n                name: response.name,\r\n                email: response.email,\r\n                picture: response.picture.data.url\r\n            })\r\n\r\n\r\n\r\n        }\r\n    }\r\n    \r\n\r\n    let Logout = () => {\r\n        setLoginDetails(initialDetails)\r\n        localStorage.removeItem(\"loginDetails\");\r\n        window.FB.logout()\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Navbar className=\"justify-content-between\" bg=\"dark\" expand=\"lg\">\r\n\r\n                <Link to=\"about\">About</Link>\r\n                <Link to=\"\">All India Status</Link>\r\n                {(loginDetails !== null && loginDetails.isLoggedin) ?\r\n                    [<Link to=\"user\">Profile</Link>,\r\n                    <Link to=\"\"><button onClick={Logout}>Logout</button></Link>,] :\r\n                    \"\"}\r\n                <Link style={{ display: (loginDetails!==null && loginDetails.isLoggedin !== false) ? \"none\": \"block\"}} to=\"user\"><FacebookLogin\r\n                    appId=\"844646109387146\"\r\n                    autoLoad={false}\r\n                    fields=\"name,email,picture\"\r\n                    // onClick={GetHistory}\r\n                    callback={responseFacebook}\r\n                    cssClass=\"my-facebook-button-class\"\r\n                    icon=\"fa-facebook\">\r\n                </FacebookLogin></Link>\r\n            </Navbar>\r\n            {/* JSON.parse(localStorage.getItem(\"loginDetails\")) */}\r\n\r\n            <UserContext.Provider value={loginDetails} >\r\n\r\n\r\n                <Container>\r\n                    <Router>\r\n\r\n                        <User path=\"user\" />\r\n                        <About path=\"about\" />\r\n                        <GlobalStatus path=\"/\" />\r\n\r\n\r\n                    </Router>\r\n                </Container>\r\n            </UserContext.Provider>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './App.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from '@reach/router';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n    <App path=\"Covid19Logger/*\"/>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}